(window.webpackJsonp=window.webpackJsonp||[]).push([[207],{572:function(t,a,e){"use strict";e.r(a);var v=e(40),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("p",[e("strong",[t._v("渲染机制")]),t._v("包括的内容：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("什么是DOCTYPE及作用")])]),t._v(" "),e("li",[e("p",[t._v("浏览器渲染过程")])])]),t._v(" "),e("p",[t._v("面试经常会问：在浏览器中输入url，发生了哪些事情。其中有一部就是浏览器的渲染过程。")]),t._v(" "),e("ul",[e("li",[t._v("Reflow：重排")])]),t._v(" "),e("p",[t._v("面试官问完了渲染机制，一般会紧接着问重排Reflow，你可千万别说你没听过。")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Repaint：重绘")])]),t._v(" "),e("li",[e("p",[t._v("Layout：布局")])])]),t._v(" "),e("p",[t._v("这里的Layout指的是浏览器的Layout。")]),t._v(" "),e("h2",{attrs:{id:"什么是doctype及作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是doctype及作用"}},[t._v("#")]),t._v(" 什么是DOCTYPE及作用")]),t._v(" "),e("h3",{attrs:{id:"定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),e("p",[e("strong",[t._v("DTD")]),t._v("（Document Type Definition）：文档类型定义。")]),t._v(" "),e("p",[t._v("是一系列的语法规则，用来定义XML或者(X)HTML文件类型。"),e("strong",[t._v("浏览器会使用DTD来判断文本类型")]),t._v("，决定使用何种协议来解析，以及切换浏览器模式。（说白了就是：DTD就是告诉浏览器，我是什么文档类型，你要用什么协议来解析我）")]),t._v(" "),e("p",[e("strong",[t._v("DOCTYPE")]),t._v("：用来声明DTD规范。")]),t._v(" "),e("p",[t._v("一个主要的用途便是文件的合法性验证。如果文件代码不合法，那么浏览器解析时便会出现一些差错。（说白了，DOCTYPE就是用来声明DTD的）")]),t._v(" "),e("h3",{attrs:{id:"常见的doctype声明有几种"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见的doctype声明有几种"}},[t._v("#")]),t._v(" 常见的DOCTYPE声明有几种")]),t._v(" "),e("blockquote",[e("p",[t._v("面试官紧接着会问，常见的 DOCTYPE 有哪些，以及 HTML5 的 DOCTYPE 怎么写。")])]),t._v(" "),e("p",[t._v("1、"),e("strong",[t._v("HTML 4.01 Strict")]),t._v("：（严格的）")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token doctype"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),e("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token name"}},[t._v("HTML")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token name"}},[t._v("PUBLIC")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-//W3C//DTD HTML 4.01//EN"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.w3.org/TR/html4/strict.dtd"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("PS：该DTD包含所有的HTML元素和属性，但不包括展示性的和弃用的元素（比如 font、u下划线等，这些是被废弃了的）。")]),t._v(" "),e("p",[t._v("2、"),e("strong",[t._v("HTML 4.01 Transitional")]),t._v("：（传统的）")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token doctype"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),e("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token name"}},[t._v("HTML")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token name"}},[t._v("PUBLIC")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-//W3C//DTD HTML 4.01 Transitional//EN"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.w3.org/TR/html4/loose.dtd"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),e("p",[t._v("PS：该DTD包含所有的HTML元素和属性，但包括展示性的和弃用的元素（比如 font、u下划线等）。")]),t._v(" "),e("p",[t._v("3、HTML 5：")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token doctype"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),e("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token name"}},[t._v("html")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[e("strong",[t._v("总结：")])]),t._v(" "),e("p",[t._v("面试时，不会让你写出 HTML 4.01的写法，因为大家都记不住。但是要记住 HTML 5 的写法，别看它简单，知道的人还真不多。")]),t._v(" "),e("p",[t._v("面试时，可以这样回答： HTML 4.01 中有两种写法，一种是严格的，一种是传统的；并且答出二者的区别。 HTML 5的写法是"),e("code",[t._v("<!DOCTYPE html>")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"浏览器的渲染过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的渲染过程"}},[t._v("#")]),t._v(" 浏览器的渲染过程")]),t._v(" "),e("h3",{attrs:{id:"渲染树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染树"}},[t._v("#")]),t._v(" 渲染树")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://img.smyhvae.com/20210118-2005.png",alt:""}})]),t._v(" "),e("blockquote",[e("p",[t._v("上方图片的来源："),e("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Google 官方 | 渲染树构建、布局及绘制"),e("OutboundLink")],1)])]),t._v(" "),e("p",[e("strong",[t._v("渲染树")]),t._v("包含了网页中有哪些节点、各个节点的CSS样式（大小、颜色等）、以及他们的从属关系。")]),t._v(" "),e("p",[t._v("我们写完前端代码之后，计算机通过解释器把代码文本翻译成机器能理解的数据结构。比如说，html标签是由一对一对的尖括号表述的，可以被浏览器解析为有含义的标记。这些标记被翻译成节点对象，存放到链型数据结构中。这些节点被称之为"),e("strong",[t._v("DOM对象")]),t._v("，这个链型数据结构就是"),e("strong",[t._v("渲染树")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"渲染过程-重要"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染过程-重要"}},[t._v("#")]),t._v(" 渲染过程（重要）")]),t._v(" "),e("p",[t._v("浏览器的渲染过程非常复杂，但是面试只用说几句话就行了，不然太耗时间。如何快速简洁地描述清楚，是关键。来看看下面这张图。")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://img.smyhvae.com/20180310_1257.png",alt:""}})]),t._v(" "),e("p",[t._v("这里解释一下几个概念，方便大家理解：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("DOM树（DOM Tree）：浏览器将HTML标签解析成树形的数据结构。DOM树包含了有哪些节点，以及节点之间的嵌套关系。")])]),t._v(" "),e("li",[e("p",[t._v("CSSOM（CSS Rule Tree）：浏览器将CSS解析成树形的数据结构。CSSOM包含了节点的样式。")])]),t._v(" "),e("li",[e("p",[t._v("渲染树（Render Tree）: DOM 树与 CSSOM 树合并后形成渲染树。渲染树只包含渲染网页所需的节点（但并不知道位置）。")])]),t._v(" "),e("li",[e("p",[t._v("布局（Layout）: 计算出每个节点在屏幕中的"),e("strong",[t._v("位置和大小")]),t._v("。")])]),t._v(" "),e("li",[e("p",[t._v("绘制（Painting）：按照算出来的规则，通过显卡，把内容画出来。")])]),t._v(" "),e("li",[e("p",[t._v("conmposite：合成。浏览器在绘制的时候，不会把所有的内容都画在同一个层上。需要最终把这些层合成到一起，显示在屏幕上。")])])]),t._v(" "),e("p",[t._v("参考链接：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://www.cnblogs.com/slly/p/6640761.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器渲染原理及流程"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"关键渲染路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关键渲染路径"}},[t._v("#")]),t._v(" 关键渲染路径")]),t._v(" "),e("p",[t._v("浏览器渲染分为五个阶段：")]),t._v(" "),e("blockquote",[e("p",[t._v("JavaScript/CSS --\x3e Style --\x3e Layout --\x3e Paint --\x3e Composite")])]),t._v(" "),e("p",[e("img",{attrs:{src:"http://img.smyhvae.com/20210118-1950.jpg",alt:""}})]),t._v(" "),e("blockquote",[e("p",[t._v("上方图片的来源："),e("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/rendering",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developers.google.com/web/fundamentals/performance/rendering"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("关键渲染路径描述的是渲染从触发到绘制的全过程，一共经历了五个阶段：")]),t._v(" "),e("p",[t._v("（1）通过JS、CSS代码来"),e("strong",[t._v("触发")]),t._v("页面上的视觉变化。")]),t._v(" "),e("p",[t._v("（2）Style：浏览器要重新对样式进行计算。")]),t._v(" "),e("p",[t._v("（3）layout：同上一段。")]),t._v(" "),e("p",[t._v("（4）painting：同上一段。")]),t._v(" "),e("p",[t._v("（5）conmposite：同上一段。")]),t._v(" "),e("p",[t._v("理论上，上面的五个步骤都是必须要经历的。布局和绘制是关键渲染路径中，最重要、开销最高的两个步骤。")]),t._v(" "),e("p",[t._v("但是，有些样式并不会影响布局，也不会影响绘制。所以，浏览器对这方面的性能进行了优化，并不一定要经历布局和绘制这两个过程。这就需要我们先了解一下「重排」和「重绘」这两个概念。详见下一段。")]),t._v(" "),e("h2",{attrs:{id:"reflow-重排-回流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reflow-重排-回流"}},[t._v("#")]),t._v(" Reflow：重排（回流）")]),t._v(" "),e("h3",{attrs:{id:"定义-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定义-2"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),e("p",[e("strong",[t._v("重排 Reflow")]),t._v("：")]),t._v(" "),e("p",[t._v("渲染对象在创建完成并添加到渲染树时，是将DOM节点和它对应的样式结合起来，并不包含位置和大小信息。")]),t._v(" "),e("p",[t._v("我们还需要通过 "),e("code",[t._v("Layout")]),t._v(" 布局阶段，来计算它们在设备视口(viewport)内的确切位置和大小，计算这些值的过程称为"),e("code",[t._v("回流")]),t._v("、"),e("code",[t._v("布局")]),t._v("或"),e("code",[t._v("重排")]),t._v("。")]),t._v(" "),e("p",[t._v("参考链接：")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/xiahj/p/11777786.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("从浏览器渲染原理，浅谈回流重绘与性能优化"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/chenjigeng/blog/issues/4",target:"_blank",rel:"noopener noreferrer"}},[t._v("你真的了解回流和重绘吗"),e("OutboundLink")],1)])])]),t._v(" "),e("h3",{attrs:{id:"什么时候会触发-reflow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么时候会触发-reflow"}},[t._v("#")]),t._v(" 什么时候会触发 Reflow")]),t._v(" "),e("blockquote",[e("p",[t._v("核心就是围绕DOM元素的"),e("strong",[t._v("大小")]),t._v("和"),e("strong",[t._v("位置")]),t._v("。")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("增加、删除DOM节点")])]),t._v(" "),e("li",[e("p",[t._v("display: none")])]),t._v(" "),e("li",[e("p",[t._v("移动元素位置，或是增加动画")])]),t._v(" "),e("li",[e("p",[t._v("修改CSS样式时（宽高、display 为none等，都是通过css样式来修改的）")])]),t._v(" "),e("li",[e("p",[t._v("offsetLeft、scrollTop、clientWidth")])]),t._v(" "),e("li",[e("p",[t._v("修改浏览器窗口大小时（即Resize窗口，移动端没有这个问题），或是滚动的时候，"),e("strong",[t._v("有可能")]),t._v("会触发（具体要看浏览器的规则）。")])]),t._v(" "),e("li",[e("p",[t._v("修改网页的默认字体时（这个很消耗性能）。")])])]),t._v(" "),e("p",[e("strong",[t._v("面试总结：")])]),t._v(" "),e("p",[t._v("首先要答出 Reflow 定义；其次，什么时候触发，至少要答出两条。更进一步，面试官可能还会问你"),e("strong",[t._v("怎么避免reflow")]),t._v("，这个自己去查查吧。")]),t._v(" "),e("h2",{attrs:{id:"repaint-重绘"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#repaint-重绘"}},[t._v("#")]),t._v(" Repaint：重绘")]),t._v(" "),e("h3",{attrs:{id:"定义-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定义-3"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),e("p",[e("strong",[t._v("Repaint重绘制")]),t._v("：当各种盒子的位置、大小以及其他属性，例如颜色、字体大小等都确定下来后，浏览器便把这些元素都按照各自的特性绘制一遍，于是页面的内容出现了，这个过程称之为 Repaint。")]),t._v(" "),e("p",[t._v("说白了，页面要呈现的内容，统统画在屏幕上，这就叫 Repaint。")]),t._v(" "),e("h3",{attrs:{id:"什么时候触发-repaint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么时候触发-repaint"}},[t._v("#")]),t._v(" 什么时候触发 Repaint")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("DOM改动")])]),t._v(" "),e("li",[e("p",[t._v("CSS改动")])])]),t._v(" "),e("p",[t._v("其实，就是判断当前呈现的内容是否发生变化（无论这个变化是通过DOM改动还是CSS改动）。只要页面显示的内容不一样了，肯定要 Repaint。")]),t._v(" "),e("p",[e("strong",[t._v("面试总结：")])]),t._v(" "),e("p",[t._v("面试官经常会问：“如何"),e("strong",[t._v("尽量减少")]),t._v("Repaint的频率？”")]),t._v(" "),e("p",[t._v("注意， reflow是问“怎么避免”，repaint是问“怎么减少”。Repaint是无法避免的，否则就成了静态页面了。")]),t._v(" "),e("p",[e("strong",[t._v("答案")]),t._v("：")]),t._v(" "),e("p",[t._v("（1）如果需要创建多个DOM节点，可以使用"),e("strong",[t._v("DocumentFragment")]),t._v("创建完，然后一次性地加入document。（加一个节点，就repaint一次，不太好）")]),t._v(" "),e("p",[t._v("（2）将元素的display设置为”none”，完成修改后再把display修改为原来的值。")]),t._v(" "),e("p",[t._v("参考链接："),e("a",{attrs:{href:"http://blog.csdn.net/liaozhongping/article/details/47057889",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何减少浏览器repaint和reflow ?"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=_.exports}}]);